# https://dev.to/iancleary/test-and-publish-a-python-package-to-pypi-using-poetry-and-github-actions-186a
# https://www.alexanderjunge.net/blog/github-actions-poetry-ci/
# https://nicholasnadeau.me/post/2020/8/one-version-to-rule-them-all-keeping-your-python-package-version-number-in-sync-with-git-and-poetry/


name: Publish Python package on version tag
on:
  push:
    tags:
      - 'v*.*.*'
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]
        poetry-version: [1.1.2]

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
            fetch-depth: 0 # https://github.com/mtkennerly/poetry-dynamic-versioning/issues/27

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install poetry ${{ matrix.poetry-version }}
      run: |
        python -m ensurepip
        python -m pip install --upgrade pip
        python -m pip install poetry==${{ matrix.poetry-version }}


    - name: set config
      run: poetry config virtualenvs.create true

    - name: Install dependencies
      run: poetry install

    - name: Test with pytest
      run: |
        python -m poetry run python -m pytest -v tests

    - name: set version 
      run: poetry version $(git describe --tags --abbrev=0)

    - name: publish
      run: python -m poetry publish -n --build --username __token__ --password ${{ secrets.PYPI_PASSWORD }
